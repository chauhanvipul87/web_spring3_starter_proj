<?xml version="1.0" encoding="UTF-8"?>
<beans:beans 
    xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<mvc:annotation-driven />
	<aop:aspectj-autoproxy/>
	
	<!-- scan all beans & configured automatically.  -->
	<context:component-scan base-package="com.iana.boesc.*" />

	<mvc:interceptors>
     	<beans:bean class="com.iana.boesc.generic.SessionInterceptor" />
    </mvc:interceptors> 

	<!-- Enables the Spring MVC @Controller programming model -->
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- initially check for tiles view if not found then it will be going to check in the /WEB-INF/views directory. -->
	
	<beans:bean id="tilesviewResolver" class="org.springframework.web.servlet.view.tiles2.TilesViewResolver">
		<beans:property name="order" value="0" />
	</beans:bean>
	
	<beans:bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
	<beans:property name="definitions">
	    <beans:list>
			<beans:value>/WEB-INF/spring/tiles-definitions.xml</beans:value>
	    </beans:list>
	</beans:property>
	</beans:bean>
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	 <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="1" />
	</beans:bean> 
	
	<!-- <beans:bean id="viewResolver"
	    class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
	</beans:bean> -->
	
	<!-- Handling All Exception (Custom Exception + Runtime(System) Exception) -->
	
	<beans:bean  class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	   <beans:property name="exceptionMappings">
	      <beans:props>
	         <beans:prop key="com.iana.boesc.utility.SpringException">
	            Errors/exceptionPage
	         </beans:prop>
	      </beans:props>
	   </beans:property>
	   <beans:property name="defaultErrorView" value="Errors/error"/>
	</beans:bean>
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
         <!-- setting maximum upload size -->
        <beans:property name="maxUploadSize" value="100000" />
    </beans:bean>
	
	
</beans:beans>
